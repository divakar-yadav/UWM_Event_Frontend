{"ast":null,"code":"// Import necessary hooks and utility functions\nimport{differenceInSeconds}from'date-fns';import{useEffect,useState}from'react';// CountdownTimer component that takes a 'targetDate' prop and counts down to it\nimport{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CountdownTimer=_ref=>{let{targetDate}=_ref;// State to store time remaining until the event starts\nconst[timeRemaining,setTimeRemaining]=useState({hours:0,minutes:0,seconds:0});// State to determine if the event has started\nconst[eventStarted,setEventStarted]=useState(false);// Effect hook to set up an interval timer and calculate time remaining\nuseEffect(()=>{// Function to calculate the difference between target date and current date\nconst calculateTimeRemaining=()=>{const now=new Date();const secondsRemaining=differenceInSeconds(targetDate,now);// If the event hasn't started, calculate the time parts\nif(secondsRemaining>0){const hours=Math.floor(secondsRemaining/3600);const minutes=Math.floor(secondsRemaining%3600/60);const seconds=secondsRemaining%60;// Update state with the new time remaining\nsetTimeRemaining({hours,minutes,seconds});}else{// Once the event starts, set time remaining to zero and indicate event has started\nsetTimeRemaining({hours:0,minutes:0,seconds:0});setEventStarted(true);}};// Initial calculation and interval setup\ncalculateTimeRemaining();const interval=setInterval(calculateTimeRemaining,1000);// Cleanup interval on component unmount\nreturn()=>clearInterval(interval);},[targetDate]);// Depend on targetDate, so the interval resets if the date changes\n// If the event has started, render nothing\nif(eventStarted){return/*#__PURE__*/_jsx(_Fragment,{});}// Preparing time parts for rendering\nconst timeParts=[{value:timeRemaining.hours,label:'Hours'},{value:timeRemaining.minutes,label:'Minutes'},{value:timeRemaining.seconds,label:'Seconds'}];// Render the countdown timer display\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4\",children:\"Event starts in:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center space-x-2\",children:timeParts.map((part,index)=>/*#__PURE__*/ // Map over each part of the time remaining and render them with labels\n_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-800 p-2 rounded-md shadow-lg\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-2xl font-bold\",children:part.value.toString().padStart(2,'0')})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 mt-1\",children:part.label})]},index))})]});};// Export the CountdownTimer component for use in other parts of the application\nexport default CountdownTimer;","map":{"version":3,"names":["differenceInSeconds","useEffect","useState","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","CountdownTimer","_ref","targetDate","timeRemaining","setTimeRemaining","hours","minutes","seconds","eventStarted","setEventStarted","calculateTimeRemaining","now","Date","secondsRemaining","Math","floor","interval","setInterval","clearInterval","timeParts","value","label","className","children","map","part","index","toString","padStart"],"sources":["/Users/divakaryadav/Documents/SRPC2025/UWM_Event_Frontend/src/CountdownTimer.js"],"sourcesContent":["// Import necessary hooks and utility functions\nimport { differenceInSeconds } from 'date-fns';\nimport { useEffect, useState } from 'react';\n\n// CountdownTimer component that takes a 'targetDate' prop and counts down to it\nconst CountdownTimer = ({ targetDate }) => {\n    // State to store time remaining until the event starts\n    const [timeRemaining, setTimeRemaining] = useState({ hours: 0, minutes: 0, seconds: 0 });\n    // State to determine if the event has started\n    const [eventStarted, setEventStarted] = useState(false);\n  \n    // Effect hook to set up an interval timer and calculate time remaining\n    useEffect(() => {\n      // Function to calculate the difference between target date and current date\n      const calculateTimeRemaining = () => {\n        const now = new Date();\n        const secondsRemaining = differenceInSeconds(targetDate, now);\n  \n        // If the event hasn't started, calculate the time parts\n        if (secondsRemaining > 0) {\n          const hours = Math.floor(secondsRemaining / 3600);\n          const minutes = Math.floor((secondsRemaining % 3600) / 60);\n          const seconds = secondsRemaining % 60;\n  \n          // Update state with the new time remaining\n          setTimeRemaining({ hours, minutes, seconds });\n        } else {\n          // Once the event starts, set time remaining to zero and indicate event has started\n          setTimeRemaining({ hours: 0, minutes: 0, seconds: 0 });\n          setEventStarted(true);\n        }\n      };\n  \n      // Initial calculation and interval setup\n      calculateTimeRemaining();\n      const interval = setInterval(calculateTimeRemaining, 1000);\n      // Cleanup interval on component unmount\n      return () => clearInterval(interval);\n    }, [targetDate]); // Depend on targetDate, so the interval resets if the date changes\n  \n    // If the event has started, render nothing\n    if (eventStarted) {\n      return <></>;\n    }\n  \n    // Preparing time parts for rendering\n    const timeParts = [\n      { value: timeRemaining.hours, label: 'Hours' },\n      { value: timeRemaining.minutes, label: 'Minutes' },\n      { value: timeRemaining.seconds, label: 'Seconds' },\n    ];\n  \n    // Render the countdown timer display\n    return (\n      <div className=\"text-center\">\n        <h3 className=\"text-xl font-semibold mb-4\">Event starts in:</h3>\n        <div className=\"flex justify-center space-x-2\">\n          {timeParts.map((part, index) => (\n            // Map over each part of the time remaining and render them with labels\n            <div key={index} className=\"flex flex-col items-center\">\n              <div className=\"bg-gray-800 p-2 rounded-md shadow-lg\">\n                <span className=\"text-white text-2xl font-bold\">{part.value.toString().padStart(2, '0')}</span>\n              </div>\n              <span className=\"text-gray-600 mt-1\">{part.label}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n// Export the CountdownTimer component for use in other parts of the application\nexport default CountdownTimer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}