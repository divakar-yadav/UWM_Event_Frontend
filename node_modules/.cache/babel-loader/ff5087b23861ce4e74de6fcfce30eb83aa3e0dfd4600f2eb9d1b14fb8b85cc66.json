{"ast":null,"code":"var _jsxFileName = \"/Users/divakaryadav/Documents/SRPC2025/UWM_Event_Frontend/src/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { useParams, useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  permissionCheckUrl,\n  children,\n  scoring_type\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAuthorized, setIsAuthorized] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [navigationTarget, setNavigationTarget] = useState(null);\n  const {\n    posterId\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    let ignore = false;\n    async function checkAuth() {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/home/validate_token/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (!ignore) {\n        if (response.status === 200) {\n          setIsAuthenticated(true);\n          if (permissionCheckUrl) {\n            const urlWithId = permissionCheckUrl.replace(\":id\", posterId);\n            const response = await fetch(urlWithId + `/checkforall?scoring_type=${scoring_type}`, {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n              }\n            });\n            if (response.status === 200) {\n              setIsAuthorized(true);\n            } else {\n              setIsAuthorized(false);\n            }\n          }\n        }\n        setIsLoading(false);\n      }\n    }\n    checkAuth();\n    return () => {\n      ignore = true;\n    };\n  }, [permissionCheckUrl, posterId]);\n  useEffect(() => {\n    if (!isLoading) {\n      if (!isAuthenticated) {\n        setNavigationTarget('/login');\n      } else if (isAuthenticated && !isAuthorized) {\n        setNavigationTarget('/');\n      }\n    }\n  }, [isLoading, isAuthenticated, isAuthorized]);\n  useEffect(() => {\n    if (navigationTarget) {\n      navigate(navigationTarget);\n    }\n  }, [navigationTarget, navigate]);\n  console.log({\n    isLoading,\n    isAuthenticated,\n    isAuthorized\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(PrivateRoute, \"HNXkCPM/JylO9KuizNODOR0DFRo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useParams","useNavigate","React","useState","useEffect","jsxDEV","_jsxDEV","PrivateRoute","permissionCheckUrl","children","scoring_type","_s","isAuthenticated","setIsAuthenticated","isAuthorized","setIsAuthorized","isLoading","setIsLoading","navigationTarget","setNavigationTarget","posterId","navigate","ignore","checkAuth","response","fetch","process","env","REACT_APP_API_URL","method","headers","Authorization","localStorage","getItem","status","urlWithId","replace","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/divakaryadav/Documents/SRPC2025/UWM_Event_Frontend/src/PrivateRoute.js"],"sourcesContent":["import { useParams, useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nconst PrivateRoute = ({ permissionCheckUrl, children, scoring_type }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isAuthorized, setIsAuthorized] = useState(true);\n    const [isLoading, setIsLoading] = useState(true);\n    const [navigationTarget, setNavigationTarget] = useState(null);\n    const { posterId } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        let ignore = false;\n\n        async function checkAuth() {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/home/validate_token/`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n                },\n            });\n            if (!ignore) {\n                if (response.status === 200) {\n                    setIsAuthenticated(true);\n\n                    if (permissionCheckUrl) {\n                        const urlWithId = permissionCheckUrl.replace(\":id\", posterId);\n\n                        const response = await fetch(urlWithId + `/checkforall?scoring_type=${scoring_type}`, {\n                            method: \"GET\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n                            },\n                        });\n\n                        if (response.status === 200) {\n                            setIsAuthorized(true);\n\n                        } else {\n                            setIsAuthorized(false);\n                        }\n                    }\n                }\n                setIsLoading(false);\n            }\n        }\n\n        checkAuth();\n        return () => { ignore = true; };\n    }, [permissionCheckUrl, posterId]);\n\n    useEffect(() => {\n        if (!isLoading) {\n            if (!isAuthenticated) {\n                setNavigationTarget('/login');\n            } else if (isAuthenticated && !isAuthorized) {\n                setNavigationTarget('/');\n            }\n        }\n    }, [isLoading, isAuthenticated, isAuthorized]);\n\n    useEffect(() => {\n        if (navigationTarget) {\n            navigate(navigationTarget);\n        }\n    }, [navigationTarget, navigate]);\n    console.log({ isLoading, isAuthenticated, isAuthorized });\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n    return children;\n};\n\nexport default PrivateRoute;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}